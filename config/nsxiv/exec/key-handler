#!/bin/bash

# Description: Default key-handler file modified

# MODIFICATION: Added wallpaper setter.

# Example for $XDG_CONFIG_HOME/nsxiv/exec/key-handler
# Called by nsxiv(1) after the external prefix key (C-x by default) is pressed.
# The next key combo is passed as its first argument. Passed via stdin are the
# images to act upon: all marked images, if in thumbnail mode and at least one
# image has been marked, otherwise the current image. nsxiv(1) will block until
# the handler terminates. It then checks which images have been modified and
# reloads them.

# By default nsxiv(1) will send one image per-line to stdin, however when using
# -0 the image list will be NULL separated and the environment variable
# "$NSXIV_USING_NULL" will be set to 1.

# The key combo argument has the following form: "[C-][M-][S-]KEY",
# where C/M/S indicate Ctrl/Meta(Alt)/Shift modifier states and KEY is the X
# keysym as listed in /usr/include/X11/keysymdef.h without the "XK_" prefix.
# If KEY has an uppercase equivalent, S-KEY is resolved into it. For instance,
# K replaces S-k and Scedilla replaces S-scedilla, but S-Delete is sent as-is.

# Default Function
rotate() {
	degree="$1"
	tr '\n' '\0' | xargs -0 realpath | sort | uniq | while read file; do
		case "$(file -b -i "$file")" in
		image/jpeg*) jpegtran -rotate "$degree" -copy all -outfile "$file" "$file" ;;
		*)           mogrify  -rotate "$degree" "$file" ;;
		esac
	done
}

# Default case
case "$1" in
"C-x")      xclip -in -filter | tr '\n' ' ' | xclip -in -selection clipboard ;;
"C-c")      while read file; do xclip -selection clipboard -target image/png "$file"; done ;;
"C-e")      while read file; do urxvt -bg "#444" -fg "#eee" -sl 0 -title "$file" -e sh -c "exiv2 pr -q -pa '$file' | less" & done ;;
"C-g")      tr '\n' '\0' | xargs -0 gimp & ;;
"C-r")      while read file; do rawtherapee "$file" & done ;;
"C-comma")  rotate 270 ;;
"C-period") rotate  90 ;;
"C-slash")  rotate 180 ;;
esac

set_wallpaper(){
	if [[ ! -z $(ps -efww | grep -vE "grep|launch.sh|scripts" | grep "daku" | awk -vpid=$$ '$2 != pid { print $2 }') ]]; then
		POLYBAR="$HOME/.config/polybar/daku/config.ini"
	fi 

	if [[ ! -z $(ps -efww | grep -vE "grep|launch.sh|scripts" | grep "dakura" | awk -vpid=$$ '$2 != pid { print $2 }') ]]; then
		POLYBAR="$HOME/.config/polybar/dakura/colors.ini"
	fi
	cat $POLYBAR | grep 'background = #14181d'
	if [ $? == 0 ]; then
		killall feh
		feh --bg-fill $1
		exit
	else
		killall feh
		/usr/local/bin/pywal $1
		feh --bg-fill "$(< "${HOME}/.cache/wal/wal")"
		exit
	fi
}

# Custom
while read file; do
    fullpath="$(pwd)/$file"
    case "$1" in
    "w") set_wallpaper "$file";;
    esac
done